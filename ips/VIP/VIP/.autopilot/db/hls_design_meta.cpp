#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("s_axi_AXILiteS_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_AWADDR", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARADDR", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
	Port_Property("src_axi0_TDATA", 24, hls_in, 0, "axis", "in_data", 1),
	Port_Property("src_axi0_TKEEP", 3, hls_in, 1, "axis", "in_data", 1),
	Port_Property("src_axi0_TSTRB", 3, hls_in, 2, "axis", "in_data", 1),
	Port_Property("src_axi0_TUSER", 1, hls_in, 3, "axis", "in_data", 1),
	Port_Property("src_axi0_TLAST", 1, hls_in, 4, "axis", "in_data", 1),
	Port_Property("src_axi0_TID", 1, hls_in, 5, "axis", "in_data", 1),
	Port_Property("src_axi0_TDEST", 1, hls_in, 6, "axis", "in_data", 1),
	Port_Property("src_axi1_TDATA", 24, hls_in, 7, "axis", "in_data", 1),
	Port_Property("src_axi1_TKEEP", 3, hls_in, 8, "axis", "in_data", 1),
	Port_Property("src_axi1_TSTRB", 3, hls_in, 9, "axis", "in_data", 1),
	Port_Property("src_axi1_TUSER", 1, hls_in, 10, "axis", "in_data", 1),
	Port_Property("src_axi1_TLAST", 1, hls_in, 11, "axis", "in_data", 1),
	Port_Property("src_axi1_TID", 1, hls_in, 12, "axis", "in_data", 1),
	Port_Property("src_axi1_TDEST", 1, hls_in, 13, "axis", "in_data", 1),
	Port_Property("mask2_Addr_A", 32, hls_out, 14, "bram", "MemPortADDR2", 1),
	Port_Property("mask2_EN_A", 1, hls_out, 14, "bram", "MemPortCE2", 1),
	Port_Property("mask2_Din_A", 32, hls_out, 14, "bram", "MemPortDIN2", 1),
	Port_Property("mask2_Dout_A", 32, hls_in, 14, "bram", "MemPortDOUT2", 1),
	Port_Property("mask2_WEN_A", 4, hls_out, 14, "bram", "MemPortWE2", 1),
	Port_Property("mask2_Clk_A", 1, hls_out, 14, "bram", "mem_clk", 1),
	Port_Property("mask2_Rst_A", 1, hls_out, 14, "bram", "mem_rst", 1),
	Port_Property("dst_axi_TDATA", 24, hls_out, 15, "axis", "out_data", 1),
	Port_Property("dst_axi_TKEEP", 3, hls_out, 16, "axis", "out_data", 1),
	Port_Property("dst_axi_TSTRB", 3, hls_out, 17, "axis", "out_data", 1),
	Port_Property("dst_axi_TUSER", 1, hls_out, 18, "axis", "out_data", 1),
	Port_Property("dst_axi_TLAST", 1, hls_out, 19, "axis", "out_data", 1),
	Port_Property("dst_axi_TID", 1, hls_out, 20, "axis", "out_data", 1),
	Port_Property("dst_axi_TDEST", 1, hls_out, 21, "axis", "out_data", 1),
	Port_Property("src_axi1_TVALID", 1, hls_in, 13, "axis", "in_vld", 1),
	Port_Property("src_axi1_TREADY", 1, hls_out, 13, "axis", "in_acc", 1),
	Port_Property("src_axi0_TVALID", 1, hls_in, 6, "axis", "in_vld", 1),
	Port_Property("src_axi0_TREADY", 1, hls_out, 6, "axis", "in_acc", 1),
	Port_Property("dst_axi_TVALID", 1, hls_out, 21, "axis", "out_vld", 1),
	Port_Property("dst_axi_TREADY", 1, hls_in, 21, "axis", "out_acc", 1),
};
const char* HLS_Design_Meta::dut_name = "vip_maskMerge";
