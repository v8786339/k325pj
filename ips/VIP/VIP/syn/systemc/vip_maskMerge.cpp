// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "vip_maskMerge.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const int vip_maskMerge::C_S_AXI_DATA_WIDTH = "100000";
const int vip_maskMerge::C_S_AXI_WSTRB_WIDTH = "100";
const int vip_maskMerge::C_S_AXI_ADDR_WIDTH = "100000";
const sc_logic vip_maskMerge::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<32> vip_maskMerge::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_logic vip_maskMerge::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<24> vip_maskMerge::ap_const_lv24_0 = "000000000000000000000000";
const sc_lv<3> vip_maskMerge::ap_const_lv3_0 = "000";
const sc_lv<1> vip_maskMerge::ap_const_lv1_0 = "0";
const sc_lv<2> vip_maskMerge::ap_const_lv2_0 = "00";
const sc_lv<2> vip_maskMerge::ap_const_lv2_1 = "1";
const bool vip_maskMerge::ap_const_boolean_1 = true;

vip_maskMerge::vip_maskMerge(sc_module_name name) : sc_module(name), mVcdFile(0) {
    vip_maskMerge_AXILiteS_s_axi_U = new vip_maskMerge_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("vip_maskMerge_AXILiteS_s_axi_U");
    vip_maskMerge_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    vip_maskMerge_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    vip_maskMerge_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    vip_maskMerge_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    vip_maskMerge_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    vip_maskMerge_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    vip_maskMerge_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    vip_maskMerge_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    vip_maskMerge_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    vip_maskMerge_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    vip_maskMerge_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    vip_maskMerge_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    vip_maskMerge_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    vip_maskMerge_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    vip_maskMerge_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    vip_maskMerge_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    vip_maskMerge_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    vip_maskMerge_AXILiteS_s_axi_U->ACLK(ap_clk);
    vip_maskMerge_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    vip_maskMerge_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    vip_maskMerge_AXILiteS_s_axi_U->ap_start(ap_start);
    vip_maskMerge_AXILiteS_s_axi_U->interrupt(interrupt);
    vip_maskMerge_AXILiteS_s_axi_U->ap_ready(ap_ready);
    vip_maskMerge_AXILiteS_s_axi_U->ap_done(ap_done);
    vip_maskMerge_AXILiteS_s_axi_U->ap_idle(ap_idle);
    AXIvideo2Mat_U0 = new AXIvideo2Mat("AXIvideo2Mat_U0");
    AXIvideo2Mat_U0->ap_clk(ap_clk);
    AXIvideo2Mat_U0->ap_rst(ap_rst_n_inv);
    AXIvideo2Mat_U0->ap_start(AXIvideo2Mat_U0_ap_start);
    AXIvideo2Mat_U0->ap_done(AXIvideo2Mat_U0_ap_done);
    AXIvideo2Mat_U0->ap_continue(AXIvideo2Mat_U0_ap_continue);
    AXIvideo2Mat_U0->ap_idle(AXIvideo2Mat_U0_ap_idle);
    AXIvideo2Mat_U0->ap_ready(AXIvideo2Mat_U0_ap_ready);
    AXIvideo2Mat_U0->src_axi1_TDATA(src_axi1_TDATA);
    AXIvideo2Mat_U0->src_axi1_TVALID(src_axi1_TVALID);
    AXIvideo2Mat_U0->src_axi1_TREADY(AXIvideo2Mat_U0_src_axi1_TREADY);
    AXIvideo2Mat_U0->src_axi1_TKEEP(src_axi1_TKEEP);
    AXIvideo2Mat_U0->src_axi1_TSTRB(src_axi1_TSTRB);
    AXIvideo2Mat_U0->src_axi1_TUSER(src_axi1_TUSER);
    AXIvideo2Mat_U0->src_axi1_TLAST(src_axi1_TLAST);
    AXIvideo2Mat_U0->src_axi1_TID(src_axi1_TID);
    AXIvideo2Mat_U0->src_axi1_TDEST(src_axi1_TDEST);
    AXIvideo2Mat_U0->img_data_stream_0_V_din(AXIvideo2Mat_U0_img_data_stream_0_V_din);
    AXIvideo2Mat_U0->img_data_stream_0_V_full_n(imagSrc_data_stream_s_full_n);
    AXIvideo2Mat_U0->img_data_stream_0_V_write(AXIvideo2Mat_U0_img_data_stream_0_V_write);
    AXIvideo2Mat_U0->img_data_stream_1_V_din(AXIvideo2Mat_U0_img_data_stream_1_V_din);
    AXIvideo2Mat_U0->img_data_stream_1_V_full_n(imagSrc_data_stream_1_full_n);
    AXIvideo2Mat_U0->img_data_stream_1_V_write(AXIvideo2Mat_U0_img_data_stream_1_V_write);
    AXIvideo2Mat_U0->img_data_stream_2_V_din(AXIvideo2Mat_U0_img_data_stream_2_V_din);
    AXIvideo2Mat_U0->img_data_stream_2_V_full_n(imagSrc_data_stream_2_full_n);
    AXIvideo2Mat_U0->img_data_stream_2_V_write(AXIvideo2Mat_U0_img_data_stream_2_V_write);
    Loop_loop_height_pro_U0 = new Loop_loop_height_pro("Loop_loop_height_pro_U0");
    Loop_loop_height_pro_U0->ap_clk(ap_clk);
    Loop_loop_height_pro_U0->ap_rst(ap_rst_n_inv);
    Loop_loop_height_pro_U0->ap_start(Loop_loop_height_pro_U0_ap_start);
    Loop_loop_height_pro_U0->start_full_n(start_for_Mat2AXIvideo_U0_full_n);
    Loop_loop_height_pro_U0->ap_done(Loop_loop_height_pro_U0_ap_done);
    Loop_loop_height_pro_U0->ap_continue(Loop_loop_height_pro_U0_ap_continue);
    Loop_loop_height_pro_U0->ap_idle(Loop_loop_height_pro_U0_ap_idle);
    Loop_loop_height_pro_U0->ap_ready(Loop_loop_height_pro_U0_ap_ready);
    Loop_loop_height_pro_U0->start_out(Loop_loop_height_pro_U0_start_out);
    Loop_loop_height_pro_U0->start_write(Loop_loop_height_pro_U0_start_write);
    Loop_loop_height_pro_U0->imag_1_data_stream_0_V_din(Loop_loop_height_pro_U0_imag_1_data_stream_0_V_din);
    Loop_loop_height_pro_U0->imag_1_data_stream_0_V_full_n(imag_1_data_stream_0_full_n);
    Loop_loop_height_pro_U0->imag_1_data_stream_0_V_write(Loop_loop_height_pro_U0_imag_1_data_stream_0_V_write);
    Loop_loop_height_pro_U0->imag_1_data_stream_1_V_din(Loop_loop_height_pro_U0_imag_1_data_stream_1_V_din);
    Loop_loop_height_pro_U0->imag_1_data_stream_1_V_full_n(imag_1_data_stream_1_full_n);
    Loop_loop_height_pro_U0->imag_1_data_stream_1_V_write(Loop_loop_height_pro_U0_imag_1_data_stream_1_V_write);
    Loop_loop_height_pro_U0->imag_1_data_stream_2_V_din(Loop_loop_height_pro_U0_imag_1_data_stream_2_V_din);
    Loop_loop_height_pro_U0->imag_1_data_stream_2_V_full_n(imag_1_data_stream_2_full_n);
    Loop_loop_height_pro_U0->imag_1_data_stream_2_V_write(Loop_loop_height_pro_U0_imag_1_data_stream_2_V_write);
    Loop_loop_height_pro_U0->imagSrc_data_stream_0_V_dout(imagSrc_data_stream_s_dout);
    Loop_loop_height_pro_U0->imagSrc_data_stream_0_V_empty_n(imagSrc_data_stream_s_empty_n);
    Loop_loop_height_pro_U0->imagSrc_data_stream_0_V_read(Loop_loop_height_pro_U0_imagSrc_data_stream_0_V_read);
    Loop_loop_height_pro_U0->imagSrc_data_stream_1_V_dout(imagSrc_data_stream_1_dout);
    Loop_loop_height_pro_U0->imagSrc_data_stream_1_V_empty_n(imagSrc_data_stream_1_empty_n);
    Loop_loop_height_pro_U0->imagSrc_data_stream_1_V_read(Loop_loop_height_pro_U0_imagSrc_data_stream_1_V_read);
    Loop_loop_height_pro_U0->imagSrc_data_stream_2_V_dout(imagSrc_data_stream_2_dout);
    Loop_loop_height_pro_U0->imagSrc_data_stream_2_V_empty_n(imagSrc_data_stream_2_empty_n);
    Loop_loop_height_pro_U0->imagSrc_data_stream_2_V_read(Loop_loop_height_pro_U0_imagSrc_data_stream_2_V_read);
    Loop_loop_height_pro_U0->mask2_Addr_A(Loop_loop_height_pro_U0_mask2_Addr_A);
    Loop_loop_height_pro_U0->mask2_EN_A(Loop_loop_height_pro_U0_mask2_EN_A);
    Loop_loop_height_pro_U0->mask2_WEN_A(Loop_loop_height_pro_U0_mask2_WEN_A);
    Loop_loop_height_pro_U0->mask2_Din_A(Loop_loop_height_pro_U0_mask2_Din_A);
    Loop_loop_height_pro_U0->mask2_Dout_A(mask2_Dout_A);
    Loop_loop_height_pro_U0->src_axi0_TDATA(src_axi0_TDATA);
    Loop_loop_height_pro_U0->src_axi0_TVALID(src_axi0_TVALID);
    Loop_loop_height_pro_U0->src_axi0_TREADY(Loop_loop_height_pro_U0_src_axi0_TREADY);
    Loop_loop_height_pro_U0->src_axi0_TKEEP(src_axi0_TKEEP);
    Loop_loop_height_pro_U0->src_axi0_TSTRB(src_axi0_TSTRB);
    Loop_loop_height_pro_U0->src_axi0_TUSER(src_axi0_TUSER);
    Loop_loop_height_pro_U0->src_axi0_TLAST(src_axi0_TLAST);
    Loop_loop_height_pro_U0->src_axi0_TID(src_axi0_TID);
    Loop_loop_height_pro_U0->src_axi0_TDEST(src_axi0_TDEST);
    Mat2AXIvideo_U0 = new Mat2AXIvideo("Mat2AXIvideo_U0");
    Mat2AXIvideo_U0->ap_clk(ap_clk);
    Mat2AXIvideo_U0->ap_rst(ap_rst_n_inv);
    Mat2AXIvideo_U0->ap_start(Mat2AXIvideo_U0_ap_start);
    Mat2AXIvideo_U0->ap_done(Mat2AXIvideo_U0_ap_done);
    Mat2AXIvideo_U0->ap_continue(Mat2AXIvideo_U0_ap_continue);
    Mat2AXIvideo_U0->ap_idle(Mat2AXIvideo_U0_ap_idle);
    Mat2AXIvideo_U0->ap_ready(Mat2AXIvideo_U0_ap_ready);
    Mat2AXIvideo_U0->img_data_stream_0_V_dout(imag_1_data_stream_0_dout);
    Mat2AXIvideo_U0->img_data_stream_0_V_empty_n(imag_1_data_stream_0_empty_n);
    Mat2AXIvideo_U0->img_data_stream_0_V_read(Mat2AXIvideo_U0_img_data_stream_0_V_read);
    Mat2AXIvideo_U0->img_data_stream_1_V_dout(imag_1_data_stream_1_dout);
    Mat2AXIvideo_U0->img_data_stream_1_V_empty_n(imag_1_data_stream_1_empty_n);
    Mat2AXIvideo_U0->img_data_stream_1_V_read(Mat2AXIvideo_U0_img_data_stream_1_V_read);
    Mat2AXIvideo_U0->img_data_stream_2_V_dout(imag_1_data_stream_2_dout);
    Mat2AXIvideo_U0->img_data_stream_2_V_empty_n(imag_1_data_stream_2_empty_n);
    Mat2AXIvideo_U0->img_data_stream_2_V_read(Mat2AXIvideo_U0_img_data_stream_2_V_read);
    Mat2AXIvideo_U0->dst_axi_TDATA(Mat2AXIvideo_U0_dst_axi_TDATA);
    Mat2AXIvideo_U0->dst_axi_TVALID(Mat2AXIvideo_U0_dst_axi_TVALID);
    Mat2AXIvideo_U0->dst_axi_TREADY(dst_axi_TREADY);
    Mat2AXIvideo_U0->dst_axi_TKEEP(Mat2AXIvideo_U0_dst_axi_TKEEP);
    Mat2AXIvideo_U0->dst_axi_TSTRB(Mat2AXIvideo_U0_dst_axi_TSTRB);
    Mat2AXIvideo_U0->dst_axi_TUSER(Mat2AXIvideo_U0_dst_axi_TUSER);
    Mat2AXIvideo_U0->dst_axi_TLAST(Mat2AXIvideo_U0_dst_axi_TLAST);
    Mat2AXIvideo_U0->dst_axi_TID(Mat2AXIvideo_U0_dst_axi_TID);
    Mat2AXIvideo_U0->dst_axi_TDEST(Mat2AXIvideo_U0_dst_axi_TDEST);
    imagSrc_data_stream_s_U = new fifo_w8_d2_A("imagSrc_data_stream_s_U");
    imagSrc_data_stream_s_U->clk(ap_clk);
    imagSrc_data_stream_s_U->reset(ap_rst_n_inv);
    imagSrc_data_stream_s_U->if_read_ce(ap_var_for_const0);
    imagSrc_data_stream_s_U->if_write_ce(ap_var_for_const0);
    imagSrc_data_stream_s_U->if_din(AXIvideo2Mat_U0_img_data_stream_0_V_din);
    imagSrc_data_stream_s_U->if_full_n(imagSrc_data_stream_s_full_n);
    imagSrc_data_stream_s_U->if_write(AXIvideo2Mat_U0_img_data_stream_0_V_write);
    imagSrc_data_stream_s_U->if_dout(imagSrc_data_stream_s_dout);
    imagSrc_data_stream_s_U->if_empty_n(imagSrc_data_stream_s_empty_n);
    imagSrc_data_stream_s_U->if_read(Loop_loop_height_pro_U0_imagSrc_data_stream_0_V_read);
    imagSrc_data_stream_1_U = new fifo_w8_d2_A("imagSrc_data_stream_1_U");
    imagSrc_data_stream_1_U->clk(ap_clk);
    imagSrc_data_stream_1_U->reset(ap_rst_n_inv);
    imagSrc_data_stream_1_U->if_read_ce(ap_var_for_const0);
    imagSrc_data_stream_1_U->if_write_ce(ap_var_for_const0);
    imagSrc_data_stream_1_U->if_din(AXIvideo2Mat_U0_img_data_stream_1_V_din);
    imagSrc_data_stream_1_U->if_full_n(imagSrc_data_stream_1_full_n);
    imagSrc_data_stream_1_U->if_write(AXIvideo2Mat_U0_img_data_stream_1_V_write);
    imagSrc_data_stream_1_U->if_dout(imagSrc_data_stream_1_dout);
    imagSrc_data_stream_1_U->if_empty_n(imagSrc_data_stream_1_empty_n);
    imagSrc_data_stream_1_U->if_read(Loop_loop_height_pro_U0_imagSrc_data_stream_1_V_read);
    imagSrc_data_stream_2_U = new fifo_w8_d2_A("imagSrc_data_stream_2_U");
    imagSrc_data_stream_2_U->clk(ap_clk);
    imagSrc_data_stream_2_U->reset(ap_rst_n_inv);
    imagSrc_data_stream_2_U->if_read_ce(ap_var_for_const0);
    imagSrc_data_stream_2_U->if_write_ce(ap_var_for_const0);
    imagSrc_data_stream_2_U->if_din(AXIvideo2Mat_U0_img_data_stream_2_V_din);
    imagSrc_data_stream_2_U->if_full_n(imagSrc_data_stream_2_full_n);
    imagSrc_data_stream_2_U->if_write(AXIvideo2Mat_U0_img_data_stream_2_V_write);
    imagSrc_data_stream_2_U->if_dout(imagSrc_data_stream_2_dout);
    imagSrc_data_stream_2_U->if_empty_n(imagSrc_data_stream_2_empty_n);
    imagSrc_data_stream_2_U->if_read(Loop_loop_height_pro_U0_imagSrc_data_stream_2_V_read);
    imag_1_data_stream_0_U = new fifo_w8_d2_A("imag_1_data_stream_0_U");
    imag_1_data_stream_0_U->clk(ap_clk);
    imag_1_data_stream_0_U->reset(ap_rst_n_inv);
    imag_1_data_stream_0_U->if_read_ce(ap_var_for_const0);
    imag_1_data_stream_0_U->if_write_ce(ap_var_for_const0);
    imag_1_data_stream_0_U->if_din(Loop_loop_height_pro_U0_imag_1_data_stream_0_V_din);
    imag_1_data_stream_0_U->if_full_n(imag_1_data_stream_0_full_n);
    imag_1_data_stream_0_U->if_write(Loop_loop_height_pro_U0_imag_1_data_stream_0_V_write);
    imag_1_data_stream_0_U->if_dout(imag_1_data_stream_0_dout);
    imag_1_data_stream_0_U->if_empty_n(imag_1_data_stream_0_empty_n);
    imag_1_data_stream_0_U->if_read(Mat2AXIvideo_U0_img_data_stream_0_V_read);
    imag_1_data_stream_1_U = new fifo_w8_d2_A("imag_1_data_stream_1_U");
    imag_1_data_stream_1_U->clk(ap_clk);
    imag_1_data_stream_1_U->reset(ap_rst_n_inv);
    imag_1_data_stream_1_U->if_read_ce(ap_var_for_const0);
    imag_1_data_stream_1_U->if_write_ce(ap_var_for_const0);
    imag_1_data_stream_1_U->if_din(Loop_loop_height_pro_U0_imag_1_data_stream_1_V_din);
    imag_1_data_stream_1_U->if_full_n(imag_1_data_stream_1_full_n);
    imag_1_data_stream_1_U->if_write(Loop_loop_height_pro_U0_imag_1_data_stream_1_V_write);
    imag_1_data_stream_1_U->if_dout(imag_1_data_stream_1_dout);
    imag_1_data_stream_1_U->if_empty_n(imag_1_data_stream_1_empty_n);
    imag_1_data_stream_1_U->if_read(Mat2AXIvideo_U0_img_data_stream_1_V_read);
    imag_1_data_stream_2_U = new fifo_w8_d2_A("imag_1_data_stream_2_U");
    imag_1_data_stream_2_U->clk(ap_clk);
    imag_1_data_stream_2_U->reset(ap_rst_n_inv);
    imag_1_data_stream_2_U->if_read_ce(ap_var_for_const0);
    imag_1_data_stream_2_U->if_write_ce(ap_var_for_const0);
    imag_1_data_stream_2_U->if_din(Loop_loop_height_pro_U0_imag_1_data_stream_2_V_din);
    imag_1_data_stream_2_U->if_full_n(imag_1_data_stream_2_full_n);
    imag_1_data_stream_2_U->if_write(Loop_loop_height_pro_U0_imag_1_data_stream_2_V_write);
    imag_1_data_stream_2_U->if_dout(imag_1_data_stream_2_dout);
    imag_1_data_stream_2_U->if_empty_n(imag_1_data_stream_2_empty_n);
    imag_1_data_stream_2_U->if_read(Mat2AXIvideo_U0_img_data_stream_2_V_read);
    start_for_Mat2AXIbkb_U = new start_for_Mat2AXIbkb("start_for_Mat2AXIbkb_U");
    start_for_Mat2AXIbkb_U->clk(ap_clk);
    start_for_Mat2AXIbkb_U->reset(ap_rst_n_inv);
    start_for_Mat2AXIbkb_U->if_read_ce(ap_var_for_const0);
    start_for_Mat2AXIbkb_U->if_write_ce(ap_var_for_const0);
    start_for_Mat2AXIbkb_U->if_din(start_for_Mat2AXIvideo_U0_din);
    start_for_Mat2AXIbkb_U->if_full_n(start_for_Mat2AXIvideo_U0_full_n);
    start_for_Mat2AXIbkb_U->if_write(Loop_loop_height_pro_U0_start_write);
    start_for_Mat2AXIbkb_U->if_dout(start_for_Mat2AXIvideo_U0_dout);
    start_for_Mat2AXIbkb_U->if_empty_n(start_for_Mat2AXIvideo_U0_empty_n);
    start_for_Mat2AXIbkb_U->if_read(Mat2AXIvideo_U0_ap_ready);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_AXIvideo2Mat_U0_ap_continue);

    SC_METHOD(thread_AXIvideo2Mat_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_AXIvideo2Mat_U0_ap_ready );

    SC_METHOD(thread_AXIvideo2Mat_U0_start_full_n);

    SC_METHOD(thread_AXIvideo2Mat_U0_start_write);

    SC_METHOD(thread_Loop_loop_height_pro_U0_ap_continue);

    SC_METHOD(thread_Loop_loop_height_pro_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_Loop_loop_height_pro_U0_ap_ready );

    SC_METHOD(thread_Mat2AXIvideo_U0_ap_continue);

    SC_METHOD(thread_Mat2AXIvideo_U0_ap_start);
    sensitive << ( start_for_Mat2AXIvideo_U0_empty_n );

    SC_METHOD(thread_Mat2AXIvideo_U0_start_full_n);

    SC_METHOD(thread_Mat2AXIvideo_U0_start_write);

    SC_METHOD(thread_ap_done);
    sensitive << ( Mat2AXIvideo_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( AXIvideo2Mat_U0_ap_idle );
    sensitive << ( Loop_loop_height_pro_U0_ap_idle );
    sensitive << ( Mat2AXIvideo_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sync_ready );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sync_AXIvideo2Mat_U0_ap_ready);
    sensitive << ( AXIvideo2Mat_U0_ap_ready );
    sensitive << ( ap_sync_reg_AXIvideo2Mat_U0_ap_ready );

    SC_METHOD(thread_ap_sync_Loop_loop_height_pro_U0_ap_ready);
    sensitive << ( Loop_loop_height_pro_U0_ap_ready );
    sensitive << ( ap_sync_reg_Loop_loop_height_pro_U0_ap_ready );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( Mat2AXIvideo_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( ap_sync_AXIvideo2Mat_U0_ap_ready );
    sensitive << ( ap_sync_Loop_loop_height_pro_U0_ap_ready );

    SC_METHOD(thread_dst_axi_TDATA);
    sensitive << ( Mat2AXIvideo_U0_dst_axi_TDATA );

    SC_METHOD(thread_dst_axi_TDEST);
    sensitive << ( Mat2AXIvideo_U0_dst_axi_TDEST );

    SC_METHOD(thread_dst_axi_TID);
    sensitive << ( Mat2AXIvideo_U0_dst_axi_TID );

    SC_METHOD(thread_dst_axi_TKEEP);
    sensitive << ( Mat2AXIvideo_U0_dst_axi_TKEEP );

    SC_METHOD(thread_dst_axi_TLAST);
    sensitive << ( Mat2AXIvideo_U0_dst_axi_TLAST );

    SC_METHOD(thread_dst_axi_TSTRB);
    sensitive << ( Mat2AXIvideo_U0_dst_axi_TSTRB );

    SC_METHOD(thread_dst_axi_TUSER);
    sensitive << ( Mat2AXIvideo_U0_dst_axi_TUSER );

    SC_METHOD(thread_dst_axi_TVALID);
    sensitive << ( Mat2AXIvideo_U0_dst_axi_TVALID );

    SC_METHOD(thread_mask2_Addr_A);
    sensitive << ( Loop_loop_height_pro_U0_mask2_Addr_A );

    SC_METHOD(thread_mask2_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_mask2_Din_A);

    SC_METHOD(thread_mask2_EN_A);
    sensitive << ( Loop_loop_height_pro_U0_mask2_EN_A );

    SC_METHOD(thread_mask2_Rst_A);
    sensitive << ( ap_rst_n_inv );

    SC_METHOD(thread_mask2_WEN_A);

    SC_METHOD(thread_src_axi0_TREADY);
    sensitive << ( Loop_loop_height_pro_U0_src_axi0_TREADY );

    SC_METHOD(thread_src_axi1_TREADY);
    sensitive << ( AXIvideo2Mat_U0_src_axi1_TREADY );

    SC_METHOD(thread_start_for_Mat2AXIvideo_U0_din);

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_sync_reg_AXIvideo2Mat_U0_ap_ready = SC_LOGIC_0;
    AXIvideo2Mat_U0_ap_ready_count = "00";
    ap_sync_reg_Loop_loop_height_pro_U0_ap_ready = SC_LOGIC_0;
    Loop_loop_height_pro_U0_ap_ready_count = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "vip_maskMerge_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
    sc_trace(mVcdFile, src_axi0_TDATA, "(port)src_axi0_TDATA");
    sc_trace(mVcdFile, src_axi0_TKEEP, "(port)src_axi0_TKEEP");
    sc_trace(mVcdFile, src_axi0_TSTRB, "(port)src_axi0_TSTRB");
    sc_trace(mVcdFile, src_axi0_TUSER, "(port)src_axi0_TUSER");
    sc_trace(mVcdFile, src_axi0_TLAST, "(port)src_axi0_TLAST");
    sc_trace(mVcdFile, src_axi0_TID, "(port)src_axi0_TID");
    sc_trace(mVcdFile, src_axi0_TDEST, "(port)src_axi0_TDEST");
    sc_trace(mVcdFile, src_axi1_TDATA, "(port)src_axi1_TDATA");
    sc_trace(mVcdFile, src_axi1_TKEEP, "(port)src_axi1_TKEEP");
    sc_trace(mVcdFile, src_axi1_TSTRB, "(port)src_axi1_TSTRB");
    sc_trace(mVcdFile, src_axi1_TUSER, "(port)src_axi1_TUSER");
    sc_trace(mVcdFile, src_axi1_TLAST, "(port)src_axi1_TLAST");
    sc_trace(mVcdFile, src_axi1_TID, "(port)src_axi1_TID");
    sc_trace(mVcdFile, src_axi1_TDEST, "(port)src_axi1_TDEST");
    sc_trace(mVcdFile, mask2_Addr_A, "(port)mask2_Addr_A");
    sc_trace(mVcdFile, mask2_EN_A, "(port)mask2_EN_A");
    sc_trace(mVcdFile, mask2_Din_A, "(port)mask2_Din_A");
    sc_trace(mVcdFile, mask2_Dout_A, "(port)mask2_Dout_A");
    sc_trace(mVcdFile, mask2_WEN_A, "(port)mask2_WEN_A");
    sc_trace(mVcdFile, mask2_Clk_A, "(port)mask2_Clk_A");
    sc_trace(mVcdFile, mask2_Rst_A, "(port)mask2_Rst_A");
    sc_trace(mVcdFile, dst_axi_TDATA, "(port)dst_axi_TDATA");
    sc_trace(mVcdFile, dst_axi_TKEEP, "(port)dst_axi_TKEEP");
    sc_trace(mVcdFile, dst_axi_TSTRB, "(port)dst_axi_TSTRB");
    sc_trace(mVcdFile, dst_axi_TUSER, "(port)dst_axi_TUSER");
    sc_trace(mVcdFile, dst_axi_TLAST, "(port)dst_axi_TLAST");
    sc_trace(mVcdFile, dst_axi_TID, "(port)dst_axi_TID");
    sc_trace(mVcdFile, dst_axi_TDEST, "(port)dst_axi_TDEST");
    sc_trace(mVcdFile, src_axi1_TVALID, "(port)src_axi1_TVALID");
    sc_trace(mVcdFile, src_axi1_TREADY, "(port)src_axi1_TREADY");
    sc_trace(mVcdFile, src_axi0_TVALID, "(port)src_axi0_TVALID");
    sc_trace(mVcdFile, src_axi0_TREADY, "(port)src_axi0_TREADY");
    sc_trace(mVcdFile, dst_axi_TVALID, "(port)dst_axi_TVALID");
    sc_trace(mVcdFile, dst_axi_TREADY, "(port)dst_axi_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_start, "AXIvideo2Mat_U0_ap_start");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_done, "AXIvideo2Mat_U0_ap_done");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_continue, "AXIvideo2Mat_U0_ap_continue");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_idle, "AXIvideo2Mat_U0_ap_idle");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_ready, "AXIvideo2Mat_U0_ap_ready");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_src_axi1_TREADY, "AXIvideo2Mat_U0_src_axi1_TREADY");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_0_V_din, "AXIvideo2Mat_U0_img_data_stream_0_V_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_0_V_write, "AXIvideo2Mat_U0_img_data_stream_0_V_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_1_V_din, "AXIvideo2Mat_U0_img_data_stream_1_V_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_1_V_write, "AXIvideo2Mat_U0_img_data_stream_1_V_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_2_V_din, "AXIvideo2Mat_U0_img_data_stream_2_V_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_2_V_write, "AXIvideo2Mat_U0_img_data_stream_2_V_write");
    sc_trace(mVcdFile, Loop_loop_height_pro_U0_ap_start, "Loop_loop_height_pro_U0_ap_start");
    sc_trace(mVcdFile, Loop_loop_height_pro_U0_ap_done, "Loop_loop_height_pro_U0_ap_done");
    sc_trace(mVcdFile, Loop_loop_height_pro_U0_ap_continue, "Loop_loop_height_pro_U0_ap_continue");
    sc_trace(mVcdFile, Loop_loop_height_pro_U0_ap_idle, "Loop_loop_height_pro_U0_ap_idle");
    sc_trace(mVcdFile, Loop_loop_height_pro_U0_ap_ready, "Loop_loop_height_pro_U0_ap_ready");
    sc_trace(mVcdFile, Loop_loop_height_pro_U0_start_out, "Loop_loop_height_pro_U0_start_out");
    sc_trace(mVcdFile, Loop_loop_height_pro_U0_start_write, "Loop_loop_height_pro_U0_start_write");
    sc_trace(mVcdFile, Loop_loop_height_pro_U0_imag_1_data_stream_0_V_din, "Loop_loop_height_pro_U0_imag_1_data_stream_0_V_din");
    sc_trace(mVcdFile, Loop_loop_height_pro_U0_imag_1_data_stream_0_V_write, "Loop_loop_height_pro_U0_imag_1_data_stream_0_V_write");
    sc_trace(mVcdFile, Loop_loop_height_pro_U0_imag_1_data_stream_1_V_din, "Loop_loop_height_pro_U0_imag_1_data_stream_1_V_din");
    sc_trace(mVcdFile, Loop_loop_height_pro_U0_imag_1_data_stream_1_V_write, "Loop_loop_height_pro_U0_imag_1_data_stream_1_V_write");
    sc_trace(mVcdFile, Loop_loop_height_pro_U0_imag_1_data_stream_2_V_din, "Loop_loop_height_pro_U0_imag_1_data_stream_2_V_din");
    sc_trace(mVcdFile, Loop_loop_height_pro_U0_imag_1_data_stream_2_V_write, "Loop_loop_height_pro_U0_imag_1_data_stream_2_V_write");
    sc_trace(mVcdFile, Loop_loop_height_pro_U0_imagSrc_data_stream_0_V_read, "Loop_loop_height_pro_U0_imagSrc_data_stream_0_V_read");
    sc_trace(mVcdFile, Loop_loop_height_pro_U0_imagSrc_data_stream_1_V_read, "Loop_loop_height_pro_U0_imagSrc_data_stream_1_V_read");
    sc_trace(mVcdFile, Loop_loop_height_pro_U0_imagSrc_data_stream_2_V_read, "Loop_loop_height_pro_U0_imagSrc_data_stream_2_V_read");
    sc_trace(mVcdFile, Loop_loop_height_pro_U0_mask2_Addr_A, "Loop_loop_height_pro_U0_mask2_Addr_A");
    sc_trace(mVcdFile, Loop_loop_height_pro_U0_mask2_EN_A, "Loop_loop_height_pro_U0_mask2_EN_A");
    sc_trace(mVcdFile, Loop_loop_height_pro_U0_mask2_WEN_A, "Loop_loop_height_pro_U0_mask2_WEN_A");
    sc_trace(mVcdFile, Loop_loop_height_pro_U0_mask2_Din_A, "Loop_loop_height_pro_U0_mask2_Din_A");
    sc_trace(mVcdFile, Loop_loop_height_pro_U0_src_axi0_TREADY, "Loop_loop_height_pro_U0_src_axi0_TREADY");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_start, "Mat2AXIvideo_U0_ap_start");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_done, "Mat2AXIvideo_U0_ap_done");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_continue, "Mat2AXIvideo_U0_ap_continue");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_idle, "Mat2AXIvideo_U0_ap_idle");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_ready, "Mat2AXIvideo_U0_ap_ready");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_img_data_stream_0_V_read, "Mat2AXIvideo_U0_img_data_stream_0_V_read");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_img_data_stream_1_V_read, "Mat2AXIvideo_U0_img_data_stream_1_V_read");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_img_data_stream_2_V_read, "Mat2AXIvideo_U0_img_data_stream_2_V_read");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_dst_axi_TDATA, "Mat2AXIvideo_U0_dst_axi_TDATA");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_dst_axi_TVALID, "Mat2AXIvideo_U0_dst_axi_TVALID");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_dst_axi_TKEEP, "Mat2AXIvideo_U0_dst_axi_TKEEP");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_dst_axi_TSTRB, "Mat2AXIvideo_U0_dst_axi_TSTRB");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_dst_axi_TUSER, "Mat2AXIvideo_U0_dst_axi_TUSER");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_dst_axi_TLAST, "Mat2AXIvideo_U0_dst_axi_TLAST");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_dst_axi_TID, "Mat2AXIvideo_U0_dst_axi_TID");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_dst_axi_TDEST, "Mat2AXIvideo_U0_dst_axi_TDEST");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, imagSrc_data_stream_s_full_n, "imagSrc_data_stream_s_full_n");
    sc_trace(mVcdFile, imagSrc_data_stream_s_dout, "imagSrc_data_stream_s_dout");
    sc_trace(mVcdFile, imagSrc_data_stream_s_empty_n, "imagSrc_data_stream_s_empty_n");
    sc_trace(mVcdFile, imagSrc_data_stream_1_full_n, "imagSrc_data_stream_1_full_n");
    sc_trace(mVcdFile, imagSrc_data_stream_1_dout, "imagSrc_data_stream_1_dout");
    sc_trace(mVcdFile, imagSrc_data_stream_1_empty_n, "imagSrc_data_stream_1_empty_n");
    sc_trace(mVcdFile, imagSrc_data_stream_2_full_n, "imagSrc_data_stream_2_full_n");
    sc_trace(mVcdFile, imagSrc_data_stream_2_dout, "imagSrc_data_stream_2_dout");
    sc_trace(mVcdFile, imagSrc_data_stream_2_empty_n, "imagSrc_data_stream_2_empty_n");
    sc_trace(mVcdFile, imag_1_data_stream_0_full_n, "imag_1_data_stream_0_full_n");
    sc_trace(mVcdFile, imag_1_data_stream_0_dout, "imag_1_data_stream_0_dout");
    sc_trace(mVcdFile, imag_1_data_stream_0_empty_n, "imag_1_data_stream_0_empty_n");
    sc_trace(mVcdFile, imag_1_data_stream_1_full_n, "imag_1_data_stream_1_full_n");
    sc_trace(mVcdFile, imag_1_data_stream_1_dout, "imag_1_data_stream_1_dout");
    sc_trace(mVcdFile, imag_1_data_stream_1_empty_n, "imag_1_data_stream_1_empty_n");
    sc_trace(mVcdFile, imag_1_data_stream_2_full_n, "imag_1_data_stream_2_full_n");
    sc_trace(mVcdFile, imag_1_data_stream_2_dout, "imag_1_data_stream_2_dout");
    sc_trace(mVcdFile, imag_1_data_stream_2_empty_n, "imag_1_data_stream_2_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, ap_sync_reg_AXIvideo2Mat_U0_ap_ready, "ap_sync_reg_AXIvideo2Mat_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_AXIvideo2Mat_U0_ap_ready, "ap_sync_AXIvideo2Mat_U0_ap_ready");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_ready_count, "AXIvideo2Mat_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_Loop_loop_height_pro_U0_ap_ready, "ap_sync_reg_Loop_loop_height_pro_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_Loop_loop_height_pro_U0_ap_ready, "ap_sync_Loop_loop_height_pro_U0_ap_ready");
    sc_trace(mVcdFile, Loop_loop_height_pro_U0_ap_ready_count, "Loop_loop_height_pro_U0_ap_ready_count");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_start_full_n, "AXIvideo2Mat_U0_start_full_n");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_start_write, "AXIvideo2Mat_U0_start_write");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_din, "start_for_Mat2AXIvideo_U0_din");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_full_n, "start_for_Mat2AXIvideo_U0_full_n");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_dout, "start_for_Mat2AXIvideo_U0_dout");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_empty_n, "start_for_Mat2AXIvideo_U0_empty_n");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_start_full_n, "Mat2AXIvideo_U0_start_full_n");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_start_write, "Mat2AXIvideo_U0_start_write");
#endif

    }
    mHdltvinHandle.open("vip_maskMerge.hdltvin.dat");
    mHdltvoutHandle.open("vip_maskMerge.hdltvout.dat");
}

vip_maskMerge::~vip_maskMerge() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete vip_maskMerge_AXILiteS_s_axi_U;
    delete AXIvideo2Mat_U0;
    delete Loop_loop_height_pro_U0;
    delete Mat2AXIvideo_U0;
    delete imagSrc_data_stream_s_U;
    delete imagSrc_data_stream_1_U;
    delete imagSrc_data_stream_2_U;
    delete imag_1_data_stream_0_U;
    delete imag_1_data_stream_1_U;
    delete imag_1_data_stream_2_U;
    delete start_for_Mat2AXIbkb_U;
}

void vip_maskMerge::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void vip_maskMerge::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, AXIvideo2Mat_U0_ap_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()))) {
        AXIvideo2Mat_U0_ap_ready_count = (!AXIvideo2Mat_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(AXIvideo2Mat_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, AXIvideo2Mat_U0_ap_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()))) {
        AXIvideo2Mat_U0_ap_ready_count = (!AXIvideo2Mat_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(AXIvideo2Mat_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, Loop_loop_height_pro_U0_ap_ready.read()))) {
        Loop_loop_height_pro_U0_ap_ready_count = (!Loop_loop_height_pro_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Loop_loop_height_pro_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, Loop_loop_height_pro_U0_ap_ready.read()))) {
        Loop_loop_height_pro_U0_ap_ready_count = (!Loop_loop_height_pro_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Loop_loop_height_pro_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_AXIvideo2Mat_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready = ap_sync_AXIvideo2Mat_U0_ap_ready.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_Loop_loop_height_pro_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_Loop_loop_height_pro_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_Loop_loop_height_pro_U0_ap_ready = ap_sync_Loop_loop_height_pro_U0_ap_ready.read();
        }
    }
}

void vip_maskMerge::thread_AXIvideo2Mat_U0_ap_continue() {
    AXIvideo2Mat_U0_ap_continue = ap_const_logic_1;
}

void vip_maskMerge::thread_AXIvideo2Mat_U0_ap_start() {
    AXIvideo2Mat_U0_ap_start = (ap_start.read() & (ap_sync_reg_AXIvideo2Mat_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void vip_maskMerge::thread_AXIvideo2Mat_U0_start_full_n() {
    AXIvideo2Mat_U0_start_full_n = ap_const_logic_1;
}

void vip_maskMerge::thread_AXIvideo2Mat_U0_start_write() {
    AXIvideo2Mat_U0_start_write = ap_const_logic_0;
}

void vip_maskMerge::thread_Loop_loop_height_pro_U0_ap_continue() {
    Loop_loop_height_pro_U0_ap_continue = ap_const_logic_1;
}

void vip_maskMerge::thread_Loop_loop_height_pro_U0_ap_start() {
    Loop_loop_height_pro_U0_ap_start = (ap_start.read() & (ap_sync_reg_Loop_loop_height_pro_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void vip_maskMerge::thread_Mat2AXIvideo_U0_ap_continue() {
    Mat2AXIvideo_U0_ap_continue = ap_const_logic_1;
}

void vip_maskMerge::thread_Mat2AXIvideo_U0_ap_start() {
    Mat2AXIvideo_U0_ap_start = start_for_Mat2AXIvideo_U0_empty_n.read();
}

void vip_maskMerge::thread_Mat2AXIvideo_U0_start_full_n() {
    Mat2AXIvideo_U0_start_full_n = ap_const_logic_1;
}

void vip_maskMerge::thread_Mat2AXIvideo_U0_start_write() {
    Mat2AXIvideo_U0_start_write = ap_const_logic_0;
}

void vip_maskMerge::thread_ap_done() {
    ap_done = Mat2AXIvideo_U0_ap_done.read();
}

void vip_maskMerge::thread_ap_idle() {
    ap_idle = (AXIvideo2Mat_U0_ap_idle.read() & Loop_loop_height_pro_U0_ap_idle.read() & Mat2AXIvideo_U0_ap_idle.read());
}

void vip_maskMerge::thread_ap_ready() {
    ap_ready = ap_sync_ready.read();
}

void vip_maskMerge::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void vip_maskMerge::thread_ap_sync_AXIvideo2Mat_U0_ap_ready() {
    ap_sync_AXIvideo2Mat_U0_ap_ready = (AXIvideo2Mat_U0_ap_ready.read() | ap_sync_reg_AXIvideo2Mat_U0_ap_ready.read());
}

void vip_maskMerge::thread_ap_sync_Loop_loop_height_pro_U0_ap_ready() {
    ap_sync_Loop_loop_height_pro_U0_ap_ready = (Loop_loop_height_pro_U0_ap_ready.read() | ap_sync_reg_Loop_loop_height_pro_U0_ap_ready.read());
}

void vip_maskMerge::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void vip_maskMerge::thread_ap_sync_done() {
    ap_sync_done = Mat2AXIvideo_U0_ap_done.read();
}

void vip_maskMerge::thread_ap_sync_ready() {
    ap_sync_ready = (ap_sync_AXIvideo2Mat_U0_ap_ready.read() & ap_sync_Loop_loop_height_pro_U0_ap_ready.read());
}

void vip_maskMerge::thread_dst_axi_TDATA() {
    dst_axi_TDATA = Mat2AXIvideo_U0_dst_axi_TDATA.read();
}

void vip_maskMerge::thread_dst_axi_TDEST() {
    dst_axi_TDEST = Mat2AXIvideo_U0_dst_axi_TDEST.read();
}

void vip_maskMerge::thread_dst_axi_TID() {
    dst_axi_TID = Mat2AXIvideo_U0_dst_axi_TID.read();
}

void vip_maskMerge::thread_dst_axi_TKEEP() {
    dst_axi_TKEEP = Mat2AXIvideo_U0_dst_axi_TKEEP.read();
}

void vip_maskMerge::thread_dst_axi_TLAST() {
    dst_axi_TLAST = Mat2AXIvideo_U0_dst_axi_TLAST.read();
}

void vip_maskMerge::thread_dst_axi_TSTRB() {
    dst_axi_TSTRB = Mat2AXIvideo_U0_dst_axi_TSTRB.read();
}

void vip_maskMerge::thread_dst_axi_TUSER() {
    dst_axi_TUSER = Mat2AXIvideo_U0_dst_axi_TUSER.read();
}

void vip_maskMerge::thread_dst_axi_TVALID() {
    dst_axi_TVALID = Mat2AXIvideo_U0_dst_axi_TVALID.read();
}

void vip_maskMerge::thread_mask2_Addr_A() {
    mask2_Addr_A = Loop_loop_height_pro_U0_mask2_Addr_A.read();
}

void vip_maskMerge::thread_mask2_Clk_A() {
    mask2_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void vip_maskMerge::thread_mask2_Din_A() {
    mask2_Din_A = ap_const_lv32_0;
}

void vip_maskMerge::thread_mask2_EN_A() {
    mask2_EN_A = Loop_loop_height_pro_U0_mask2_EN_A.read();
}

void vip_maskMerge::thread_mask2_Rst_A() {
    mask2_Rst_A = ap_rst_n_inv.read();
}

void vip_maskMerge::thread_mask2_WEN_A() {
    mask2_WEN_A =  (sc_lv<4>) (ap_const_logic_0);
}

void vip_maskMerge::thread_src_axi0_TREADY() {
    src_axi0_TREADY = Loop_loop_height_pro_U0_src_axi0_TREADY.read();
}

void vip_maskMerge::thread_src_axi1_TREADY() {
    src_axi1_TREADY = AXIvideo2Mat_U0_src_axi1_TREADY.read();
}

void vip_maskMerge::thread_start_for_Mat2AXIvideo_U0_din() {
    start_for_Mat2AXIvideo_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void vip_maskMerge::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"src_axi0_TDATA\" :  \"" << src_axi0_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"src_axi0_TKEEP\" :  \"" << src_axi0_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"src_axi0_TSTRB\" :  \"" << src_axi0_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"src_axi0_TUSER\" :  \"" << src_axi0_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"src_axi0_TLAST\" :  \"" << src_axi0_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"src_axi0_TID\" :  \"" << src_axi0_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"src_axi0_TDEST\" :  \"" << src_axi0_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"src_axi1_TDATA\" :  \"" << src_axi1_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"src_axi1_TKEEP\" :  \"" << src_axi1_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"src_axi1_TSTRB\" :  \"" << src_axi1_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"src_axi1_TUSER\" :  \"" << src_axi1_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"src_axi1_TLAST\" :  \"" << src_axi1_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"src_axi1_TID\" :  \"" << src_axi1_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"src_axi1_TDEST\" :  \"" << src_axi1_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mask2_Addr_A\" :  \"" << mask2_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mask2_EN_A\" :  \"" << mask2_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mask2_Din_A\" :  \"" << mask2_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mask2_Dout_A\" :  \"" << mask2_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mask2_WEN_A\" :  \"" << mask2_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mask2_Clk_A\" :  \"" << mask2_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mask2_Rst_A\" :  \"" << mask2_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dst_axi_TDATA\" :  \"" << dst_axi_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dst_axi_TKEEP\" :  \"" << dst_axi_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dst_axi_TSTRB\" :  \"" << dst_axi_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dst_axi_TUSER\" :  \"" << dst_axi_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dst_axi_TLAST\" :  \"" << dst_axi_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dst_axi_TID\" :  \"" << dst_axi_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dst_axi_TDEST\" :  \"" << dst_axi_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"src_axi1_TVALID\" :  \"" << src_axi1_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"src_axi1_TREADY\" :  \"" << src_axi1_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"src_axi0_TVALID\" :  \"" << src_axi0_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"src_axi0_TREADY\" :  \"" << src_axi0_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dst_axi_TVALID\" :  \"" << dst_axi_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"dst_axi_TREADY\" :  \"" << dst_axi_TREADY.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

